import java.nio.file.Files
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING

plugins {
    id 'aar'
}

dependencies {
    compileOnly name: "android"
    compileOnly "org.p5android:processing-core:${modeVersion}"
    implementationAar "com.google.vr:sdk-audio:${gvrVersion}"
    implementationAar "com.google.vr:sdk-base:${gvrVersion}"
}

sourceSets {
    main {
        java {
            srcDirs = ["src/"]
        }
        resources {
            srcDirs = ["src/"]
        }        
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourceJar
}

jar.doLast { task ->
    ant.checksum file: task.archivePath
}

clean.doFirst {
    delete "dist"
    delete "library/vr.jar"
}

compileJava.doFirst {
    String[] deps = ["sdk-audio.jar",
                     "sdk-base.jar",
                     "sdk-common.jar"]
    File libFolder = file("library")
    libFolder.mkdirs()
    for (String fn : deps) {
        Files.copy(file("${rootDir}/build/libs/" + fn).toPath(),
                   file("library/" + fn).toPath(), REPLACE_EXISTING);
    }
}

build.doLast {
    // Copying vr jar to library folder
    File vrJar = file("library/vr.jar")
    vrJar.mkdirs();
    Files.copy(file("$buildDir/libs/vr.jar").toPath(),
               vrJar.toPath(), REPLACE_EXISTING);
    // Renaming artifacts for maven publishing
    // Files.copy(file("$buildDir/libs/vr.jar").toPath(),
    //            file("$buildDir/libs/processing-vr-${vrLibVersion}.jar").toPath(), REPLACE_EXISTING);
    // Files.copy(file("$buildDir/libs/vr-sources.jar").toPath(),
    //            file("$buildDir/libs/processing-vr-${vrLibVersion}-sources.jar").toPath(), REPLACE_EXISTING);
    // Files.copy(file("$buildDir/libs/vr-javadoc.jar").toPath(),
    //            file("$buildDir/libs/processing-vr-${vrLibVersion}-javadoc.jar").toPath(), REPLACE_EXISTING);
    // Files.copy(file("$buildDir/libs/vr.jar.MD5").toPath(),
    //            file("$buildDir/libs/processing-vr-${vrLibVersion}.jar.md5").toPath(), REPLACE_EXISTING);
}

ext {
    libName = 'processing-vr'
    libVersion = vrLibVersion
    libJar = "${buildDir}/libs/${libName}-${libVersion}.jar"
    libSrc = "${buildDir}/libs/${libName}-${libVersion}-sources.jar"
    libMd5 = "${buildDir}/libs/${libName}-${libVersion}-sources.jar.md5"
    libDependencies = [[group: 'org.p5android', name: 'processing-core', version: modeVersion],
                       [group: 'com.google.vr', name: 'sdk-base', version: gvrVersion],
                       [group: 'com.google.vr', name: 'sdk-audio', version: gvrVersion]]
}
apply from: "${rootProject.projectDir}/scripts/publish-module.gradle"